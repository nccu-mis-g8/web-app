{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\gp-web-app\\\\frontend\\\\src\\\\routes\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Form } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [masterName, setMasterName] = useState(\"\");\n  function fileChangeHandler(e) {\n    const selectedFile = e.target.files[0];\n    if (selectedFile && selectedFile.type === \"text/plain\") {\n      setFile(selectedFile);\n    }\n    console.log(file);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: \"Choose a .txt file:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          accept: \".txt\",\n          onChange: fileChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Enter your name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: e => setMasterName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Upload, \"Pjj6IKBoUUf8CLsx5gZQUua1M88=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["useState","Form","jsxDEV","_jsxDEV","Upload","_s","file","setFile","masterName","setMasterName","fileChangeHandler","e","selectedFile","target","files","type","console","log","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","accept","onChange","value","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/gp-web-app/frontend/src/routes/Upload.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Form } from \"react-router-dom\";\r\n\r\nfunction Upload() {\r\n    const [file, setFile] = useState(null);\r\n    const [masterName, setMasterName] = useState(\"\");\r\n\r\n    function fileChangeHandler(e) {\r\n        const selectedFile = e.target.files[0];\r\n        if (selectedFile && selectedFile.type === \"text/plain\") {\r\n            setFile(selectedFile);\r\n        }\r\n        console.log(file);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form>\r\n                <div>\r\n                    <label htmlFor=\"file\">Choose a .txt file:</label>\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"file\"\r\n                        accept=\".txt\"\r\n                        onChange={fileChangeHandler}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"name\">Enter your name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        onChange={(e) => setMasterName(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button>Upload</button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Upload;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,SAASU,iBAAiBA,CAACC,CAAC,EAAE;IAC1B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtC,IAAIF,YAAY,IAAIA,YAAY,CAACG,IAAI,KAAK,YAAY,EAAE;MACpDR,OAAO,CAACK,YAAY,CAAC;IACzB;IACAI,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;EACrB;EAEA,oBACIH,OAAA;IAAAe,QAAA,eACIf,OAAA,CAACF,IAAI;MAAAiB,QAAA,gBACDf,OAAA;QAAAe,QAAA,gBACIf,OAAA;UAAOgB,OAAO,EAAC,MAAM;UAAAD,QAAA,EAAC;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjDpB,OAAA;UACIY,IAAI,EAAC,MAAM;UACXS,EAAE,EAAC,MAAM;UACTC,MAAM,EAAC,MAAM;UACbC,QAAQ,EAAEhB;QAAkB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNpB,OAAA;QAAAe,QAAA,gBACIf,OAAA;UAAOgB,OAAO,EAAC,MAAM;UAAAD,QAAA,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9CpB,OAAA;UACIY,IAAI,EAAC,MAAM;UACXS,EAAE,EAAC,MAAM;UACTE,QAAQ,EAAGf,CAAC,IAAKF,aAAa,CAACE,CAAC,CAACE,MAAM,CAACc,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNpB,OAAA;QAAAe,QAAA,EAAQ;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAAClB,EAAA,CApCQD,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AAsCf,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}