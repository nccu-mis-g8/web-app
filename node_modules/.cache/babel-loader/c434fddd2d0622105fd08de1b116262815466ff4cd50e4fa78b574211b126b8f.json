{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\gp-web-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport ChatRoomHeader from \"./ChatRoomHeader\";\nimport UserMessage from \"./UserMessage\";\nimport BotMessage from \"./BotMessage\";\nimport ChooseResponse from \"./ChooseResponse\";\nimport MessageInput from \"./MessageInput\";\nimport classes from \"./MessageList.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MessageList({\n  dummy,\n  dummyName\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [pageSize, setPageSize] = useState(false);\n  const [botResponses] = useState([\"Â∞çÂïäÔºåÁà∫Áà∫Ôºå‰Ω†‰πüÁü•ÈÅìMinecraftÂïäü§©\", \"ÂìáÔºåÈòøÂÖ¨Ôºå‰Ω†ÁúüÁöÑÊúâËìãÈÅéÊàøÂ≠êÂïäüòÆ\", \"ÈÇ£ÈòøÂÖ¨‰Ω†ÊòØÊÄéÈ∫ºËìãÁöÑÂïäÔºÅÊ≤íÊúâÊ©üÂô®ÊúÉ‰∏çÊúÉÂæàÈõ£Ôºü\", \"Á†åÁ£öÊòØÊÄéÈ∫ºÂÅöÁöÑüòÆ\", \"ÈòøÂÖ¨‰Ω†Â§™Âé≤ÂÆ≥‰∫Ü!!\"]);\n  const [responseIndex, setResponseIndex] = useState(0);\n  useEffect(() => {\n    // Áï∂ÁµÑ‰ª∂È¶ñÊ¨°Âä†ËºâÊôÇËß∏ÁôºÊ∑°ÂÖ•ÊïàÊûú\n    setPageSize(dummy);\n  }, [dummy]);\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const {\n    person\n  } = location.state || {};\n  const name = person ? person.model_original_name : dummyName;\n  async function sendMessageHandler(userMessage) {\n    setMessages([...messages, {\n      type: \"user\",\n      text: userMessage\n    }]);\n    // setMessages((prevMessages) => [\n    //     ...prevMessages,\n    //     { type: \"bot\", text: \"Â∞öÊú™ÈÄ£Êé•API\" },\n    // ]);\n    const currentResponseIndex = responseIndex;\n    setResponseIndex(prevIndex => (prevIndex + 1) % botResponses.length);\n    setTimeout(() => {\n      setMessages(prevMessages => [...prevMessages, {\n        type: \"bot\",\n        text: botResponses[currentResponseIndex]\n      }]);\n    }, Math.random() * 2000 + 5000); // Âª∂ÈÅ≤ 5 Âà∞ 7 Áßí\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: pageSize ? classes.outerContainerDummy : classes.outerContainer,\n      children: [/*#__PURE__*/_jsxDEV(ChatRoomHeader, {\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.listContainer,\n        children: messages.map((message, index) => message.type === \"user\" ? /*#__PURE__*/_jsxDEV(UserMessage, {\n          content: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(BotMessage, {\n          content: message.text,\n          avatar: person.modelphoto\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        onSendMessage: sendMessageHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(MessageList, \"MNYVVCjwV3IKzbDaEcBehf1E490=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["useState","useEffect","useParams","useLocation","ChatRoomHeader","UserMessage","BotMessage","ChooseResponse","MessageInput","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageList","dummy","dummyName","_s","messages","setMessages","pageSize","setPageSize","botResponses","responseIndex","setResponseIndex","id","location","person","state","name","model_original_name","sendMessageHandler","userMessage","type","text","currentResponseIndex","prevIndex","length","setTimeout","prevMessages","Math","random","children","className","outerContainerDummy","outerContainer","fileName","_jsxFileName","lineNumber","columnNumber","listContainer","map","message","index","content","avatar","modelphoto","onSendMessage","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/gp-web-app/frontend/src/components/chat/MessageList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport ChatRoomHeader from \"./ChatRoomHeader\";\r\nimport UserMessage from \"./UserMessage\";\r\nimport BotMessage from \"./BotMessage\";\r\nimport ChooseResponse from \"./ChooseResponse\";\r\nimport MessageInput from \"./MessageInput\";\r\nimport classes from \"./MessageList.module.css\";\r\n\r\nfunction MessageList({ dummy, dummyName }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [pageSize, setPageSize] = useState(false);\r\n    const [botResponses] = useState([\r\n        \"Â∞çÂïäÔºåÁà∫Áà∫Ôºå‰Ω†‰πüÁü•ÈÅìMinecraftÂïäü§©\",\r\n        \"ÂìáÔºåÈòøÂÖ¨Ôºå‰Ω†ÁúüÁöÑÊúâËìãÈÅéÊàøÂ≠êÂïäüòÆ\",\r\n        \"ÈÇ£ÈòøÂÖ¨‰Ω†ÊòØÊÄéÈ∫ºËìãÁöÑÂïäÔºÅÊ≤íÊúâÊ©üÂô®ÊúÉ‰∏çÊúÉÂæàÈõ£Ôºü\",\r\n        \"Á†åÁ£öÊòØÊÄéÈ∫ºÂÅöÁöÑüòÆ\",\r\n        \"ÈòøÂÖ¨‰Ω†Â§™Âé≤ÂÆ≥‰∫Ü!!\"\r\n    ]);\r\n    const [responseIndex, setResponseIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Áï∂ÁµÑ‰ª∂È¶ñÊ¨°Âä†ËºâÊôÇËß∏ÁôºÊ∑°ÂÖ•ÊïàÊûú\r\n        setPageSize(dummy);\r\n    }, [dummy]);\r\n\r\n    const { id } = useParams();\r\n    const location = useLocation();\r\n    const { person } = location.state || {};\r\n\r\n    const name = person ? person.model_original_name : dummyName;\r\n\r\n    async function sendMessageHandler(userMessage) {\r\n        setMessages([...messages, { type: \"user\", text: userMessage }]);\r\n        // setMessages((prevMessages) => [\r\n        //     ...prevMessages,\r\n        //     { type: \"bot\", text: \"Â∞öÊú™ÈÄ£Êé•API\" },\r\n        // ]);\r\n        const currentResponseIndex = responseIndex;\r\n        setResponseIndex((prevIndex) => (prevIndex + 1) % botResponses.length);\r\n\r\n        setTimeout(() => {\r\n            setMessages((prevMessages) => [\r\n                ...prevMessages,\r\n                { type: \"bot\", text: botResponses[currentResponseIndex] },\r\n            ]);\r\n        }, Math.random() * 2000 + 5000); // Âª∂ÈÅ≤ 5 Âà∞ 7 Áßí\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={pageSize ? classes.outerContainerDummy : classes.outerContainer}>\r\n                <ChatRoomHeader name={name} />\r\n                <div className={classes.listContainer}>\r\n                    {messages.map((message, index) =>\r\n                        message.type === \"user\" ? (\r\n                            <UserMessage key={index} content={message.text} />\r\n                        ) : (\r\n                            <BotMessage key={index} content={message.text} avatar={person.modelphoto} />\r\n                        )\r\n                    )}\r\n                    {/* <ChooseResponse /> */}\r\n                </div>\r\n                <MessageInput onSendMessage={sendMessageHandler} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MessageList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}