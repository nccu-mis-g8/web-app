{"ast":null,"code":"import{useState}from\"react\";import ChatRightHeader from\"./ChatRightHeader\";import UserMessage from\"./UserMessage\";import BotMessage from\"./BotMessage\";import MessageInput from\"./MessageInput\";import classes from\"./MessageList.module.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function MessageList(){const[messages,setMessages]=useState([]);async function sendMessageHandler(userMessage){setMessages([...messages,{type:\"user\",text:userMessage}]);setMessages(prevMessages=>[...prevMessages,{type:\"bot\",text:\"尚未連接API\"}]);}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:classes.outerContainer,children:[/*#__PURE__*/_jsx(ChatRightHeader,{}),/*#__PURE__*/_jsx(\"div\",{className:classes.listContainer,children:messages.map((message,index)=>message.type===\"user\"?/*#__PURE__*/_jsx(UserMessage,{content:message.text},index):/*#__PURE__*/_jsx(BotMessage,{content:message.text},index))}),/*#__PURE__*/_jsx(MessageInput,{onSendMessage:sendMessageHandler})]})});}export default MessageList;","map":{"version":3,"names":["useState","ChatRightHeader","UserMessage","BotMessage","MessageInput","classes","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MessageList","messages","setMessages","sendMessageHandler","userMessage","type","text","prevMessages","children","className","outerContainer","listContainer","map","message","index","content","onSendMessage"],"sources":["C:/Users/user/Desktop/gp-web-app/frontend/src/components/chat/MessageList.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport ChatRightHeader from \"./ChatRightHeader\";\r\nimport UserMessage from \"./UserMessage\";\r\nimport BotMessage from \"./BotMessage\";\r\nimport MessageInput from \"./MessageInput\";\r\nimport classes from \"./MessageList.module.css\";\r\n\r\nfunction MessageList() {\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    async function sendMessageHandler(userMessage) {\r\n        setMessages([...messages, { type: \"user\", text: userMessage }]);\r\n        setMessages((prevMessages) => [\r\n            ...prevMessages,\r\n            { type: \"bot\", text: \"尚未連接API\" },\r\n        ]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.outerContainer}>\r\n                <ChatRightHeader />\r\n                <div className={classes.listContainer}>\r\n                    {messages.map((message, index) =>\r\n                        message.type === \"user\" ? (\r\n                            <UserMessage key={index} content={message.text} />\r\n                        ) : (\r\n                            <BotMessage key={index} content={message.text} />\r\n                        )\r\n                    )}\r\n                </div>\r\n                <MessageInput onSendMessage={sendMessageHandler} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MessageList;\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,OAAO,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE/C,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACnB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAE5C,cAAe,CAAAe,kBAAkBA,CAACC,WAAW,CAAE,CAC3CF,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAE,CAAEI,IAAI,CAAE,MAAM,CAAEC,IAAI,CAAEF,WAAY,CAAC,CAAC,CAAC,CAC/DF,WAAW,CAAEK,YAAY,EAAK,CAC1B,GAAGA,YAAY,CACf,CAAEF,IAAI,CAAE,KAAK,CAAEC,IAAI,CAAE,SAAU,CAAC,CACnC,CAAC,CACN,CAEA,mBACIX,IAAA,CAAAI,SAAA,EAAAS,QAAA,cACIX,KAAA,QAAKY,SAAS,CAAEhB,OAAO,CAACiB,cAAe,CAAAF,QAAA,eACnCb,IAAA,CAACN,eAAe,GAAE,CAAC,cACnBM,IAAA,QAAKc,SAAS,CAAEhB,OAAO,CAACkB,aAAc,CAAAH,QAAA,CACjCP,QAAQ,CAACW,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,GACzBD,OAAO,CAACR,IAAI,GAAK,MAAM,cACnBV,IAAA,CAACL,WAAW,EAAayB,OAAO,CAAEF,OAAO,CAACP,IAAK,EAA7BQ,KAA+B,CAAC,cAElDnB,IAAA,CAACJ,UAAU,EAAawB,OAAO,CAAEF,OAAO,CAACP,IAAK,EAA7BQ,KAA+B,CAExD,CAAC,CACA,CAAC,cACNnB,IAAA,CAACH,YAAY,EAACwB,aAAa,CAAEb,kBAAmB,CAAE,CAAC,EAClD,CAAC,CACR,CAAC,CAEX,CAEA,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}