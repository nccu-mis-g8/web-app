{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\gp-web-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { useParams, useLocation, redirect } from \"react-router-dom\";\nimport ChatRoomHeader from \"./ChatRoomHeader\";\nimport UserMessage from \"./UserMessage\";\nimport BotMessage from \"./BotMessage\";\nimport ChooseResponse from \"./ChooseResponse\";\nimport MessageInput from \"./MessageInput\";\nimport { chat } from \"../../utils/modelUtils\";\nimport classes from \"./MessageList.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MessageList({\n  dummy,\n  dummyName\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [pageSize, setPageSize] = useState(false);\n  const [botResponses] = useState([\"可以喔！我喜歡她們的歌和舞蹈很可愛又很有才華\", \"對阿 你還有喜歡什麼 K-pop 團體 😍\", \"喔喔是妳上次跟我分享的團體嗎\", [\"好啊好啊  那我們約甚麼時候去看呢 😆\", \"好耶～那我們什麼時候去看比較好呢？\"]]);\n  const [responseIndex, setResponseIndex] = useState(0);\n  const [pendingChoices, setPendingChoices] = useState(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // 當組件首次加載時觸發淡入效果\n    setPageSize(dummy);\n  }, [dummy]);\n  useEffect(() => {\n    // 滑到底部\n    scrollToBottom();\n  }, [messages, pendingChoices]);\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const {\n    person\n  } = location.state || {};\n  const name = person ? person.model_original_name : dummyName;\n  async function sendMessageHandler(userMessage) {\n    setMessages([...messages, {\n      type: \"user\",\n      text: userMessage\n    }]);\n    try {\n      const response = await createModel(formData);\n      const accessToken = localStorage.getItem(\"accessToken\");\n      if (response.status === 200) {\n        onClickCloseBtn();\n        console.log(\"創建模型成功\");\n        window.location.reload();\n      } else if (response.status === 400) {\n        const responseData = await response.json();\n        const error = responseData.error;\n        console.log(\"錯誤訊息: \" + error);\n      } else if (response.status === 401 && accessToken) {\n        // access Token過期，用refresh Token去拿新的access Token\n        const checkReTokenStatus = await refresh();\n        if (checkReTokenStatus) {\n          const response = await createModel(formData);\n          if (response.status === 200) {\n            onClickCloseBtn();\n            console.log(\"創建模型成功\");\n            window.location.reload();\n          }\n        } else {\n          // refresh Token過期，重新登入並刪掉 localStorage 裡的東西\n          // alert(\"refresh Token過期，請重新登入!\");\n          localStorage.clear();\n          redirect(\"/login\");\n        }\n      } else {\n        const responseData = await response.json();\n        const error = responseData.message;\n        console.error(error);\n        alert(\"發生錯誤，請重新整理後再試一次\");\n      }\n    } catch (error) {\n      console.error(\"Error durning create model: \", error);\n      redirect(\"/login\");\n    }\n\n    // setMessages((prevMessages) => [\n    //     ...prevMessages,\n    //     { type: \"bot\", text: \"尚未連接API\" },\n    // ]);\n    const currentResponseIndex = responseIndex;\n    const nextResponse = botResponses[currentResponseIndex];\n    setResponseIndex(prevIndex => (prevIndex + 1) % botResponses.length);\n    setTimeout(() => {\n      if (Array.isArray(nextResponse)) {\n        // 如果是選擇，顯示選擇\n        setPendingChoices(nextResponse);\n      } else {\n        // 如果是普通回覆\n        setMessages(prevMessages => [...prevMessages, {\n          type: \"bot\",\n          text: nextResponse\n        }]);\n      }\n    }, Math.random() * 2000 + 5000);\n  }\n  function handleChoice(selection) {\n    // 添加選擇的回覆為 botMessage\n    setMessages(prevMessages => [...prevMessages, {\n      type: \"bot\",\n      text: selection\n    }]);\n    // 隱藏選擇元件\n    setPendingChoices(null);\n  }\n  function scrollToBottom() {\n    // 滾動到消息列表底部\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: pageSize ? classes.outerContainerDummy : classes.outerContainer,\n      children: [/*#__PURE__*/_jsxDEV(ChatRoomHeader, {\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.listContainer,\n        children: [messages.map((message, index) => message.type === \"user\" ? /*#__PURE__*/_jsxDEV(UserMessage, {\n          content: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(BotMessage, {\n          content: message.text,\n          avatar: person.modelphoto\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this)), pendingChoices && /*#__PURE__*/_jsxDEV(ChooseResponse, {\n          res1: pendingChoices[0],\n          res2: pendingChoices[1],\n          onChoose: handleChoice,\n          avatar: person.modelphoto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        onSendMessage: sendMessageHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(MessageList, \"0qbRMR8xnoWADQSMmZ9Amd60JRI=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["useState","useEffect","useRef","useParams","useLocation","redirect","ChatRoomHeader","UserMessage","BotMessage","ChooseResponse","MessageInput","chat","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageList","dummy","dummyName","_s","messages","setMessages","pageSize","setPageSize","botResponses","responseIndex","setResponseIndex","pendingChoices","setPendingChoices","messagesEndRef","scrollToBottom","id","location","person","state","name","model_original_name","sendMessageHandler","userMessage","type","text","response","createModel","formData","accessToken","localStorage","getItem","status","onClickCloseBtn","console","log","window","reload","responseData","json","error","checkReTokenStatus","refresh","clear","message","alert","currentResponseIndex","nextResponse","prevIndex","length","setTimeout","Array","isArray","prevMessages","Math","random","handleChoice","selection","current","scrollIntoView","behavior","children","className","outerContainerDummy","outerContainer","fileName","_jsxFileName","lineNumber","columnNumber","listContainer","map","index","content","avatar","modelphoto","res1","res2","onChoose","ref","onSendMessage","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/gp-web-app/frontend/src/components/chat/MessageList.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, useLocation, redirect } from \"react-router-dom\";\r\nimport ChatRoomHeader from \"./ChatRoomHeader\";\r\nimport UserMessage from \"./UserMessage\";\r\nimport BotMessage from \"./BotMessage\";\r\nimport ChooseResponse from \"./ChooseResponse\";\r\nimport MessageInput from \"./MessageInput\";\r\nimport { chat } from \"../../utils/modelUtils\";\r\nimport classes from \"./MessageList.module.css\";\r\n\r\nfunction MessageList({ dummy, dummyName }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [pageSize, setPageSize] = useState(false);\r\n    const [botResponses] = useState([\r\n        \"可以喔！我喜歡她們的歌和舞蹈很可愛又很有才華\",\r\n        \"對阿 你還有喜歡什麼 K-pop 團體 😍\",\r\n        \"喔喔是妳上次跟我分享的團體嗎\",\r\n        [\"好啊好啊  那我們約甚麼時候去看呢 😆\", \"好耶～那我們什麼時候去看比較好呢？\"]\r\n    ]);\r\n    const [responseIndex, setResponseIndex] = useState(0);\r\n    const [pendingChoices, setPendingChoices] = useState(null);\r\n    const messagesEndRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // 當組件首次加載時觸發淡入效果\r\n        setPageSize(dummy);\r\n    }, [dummy]);\r\n\r\n    useEffect(() => {\r\n        // 滑到底部\r\n        scrollToBottom();\r\n    }, [messages, pendingChoices]);\r\n\r\n    const { id } = useParams();\r\n    const location = useLocation();\r\n    const { person } = location.state || {};\r\n\r\n    const name = person ? person.model_original_name : dummyName;\r\n\r\n    async function sendMessageHandler(userMessage) {\r\n        setMessages([...messages, { type: \"user\", text: userMessage }]);\r\n\r\n        try {\r\n\r\n            const response = await createModel(formData);\r\n            const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n            if (response.status === 200) {\r\n                onClickCloseBtn();\r\n                console.log(\"創建模型成功\");\r\n                window.location.reload();\r\n            } else if (response.status === 400) {\r\n                const responseData = await response.json();\r\n                const error = responseData.error;\r\n                console.log(\"錯誤訊息: \" + error);\r\n            } else if (response.status === 401 && accessToken) {\r\n                // access Token過期，用refresh Token去拿新的access Token\r\n                const checkReTokenStatus = await refresh();\r\n        \r\n                if (checkReTokenStatus) {\r\n                    const response = await createModel(formData);\r\n        \r\n                    if (response.status === 200) {\r\n                        onClickCloseBtn();\r\n                        console.log(\"創建模型成功\");\r\n                        window.location.reload();\r\n                    }\r\n                } else {\r\n                    // refresh Token過期，重新登入並刪掉 localStorage 裡的東西\r\n                    // alert(\"refresh Token過期，請重新登入!\");\r\n                    localStorage.clear();\r\n                    redirect(\"/login\");\r\n                }\r\n            } else {\r\n                const responseData = await response.json();\r\n                const error = responseData.message;\r\n                console.error(error);\r\n                alert(\"發生錯誤，請重新整理後再試一次\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error durning create model: \", error);\r\n            redirect(\"/login\");\r\n        }\r\n\r\n        // setMessages((prevMessages) => [\r\n        //     ...prevMessages,\r\n        //     { type: \"bot\", text: \"尚未連接API\" },\r\n        // ]);\r\n        const currentResponseIndex = responseIndex;\r\n        const nextResponse = botResponses[currentResponseIndex];\r\n        setResponseIndex((prevIndex) => (prevIndex + 1) % botResponses.length);\r\n\r\n        setTimeout(() => {\r\n            if (Array.isArray(nextResponse)) {\r\n                // 如果是選擇，顯示選擇\r\n                setPendingChoices(nextResponse);\r\n            } else {\r\n                // 如果是普通回覆\r\n                setMessages((prevMessages) => [\r\n                    ...prevMessages,\r\n                    { type: \"bot\", text: nextResponse },\r\n                ]);\r\n            }\r\n        }, Math.random() * 2000 + 5000);\r\n    }\r\n\r\n    function handleChoice(selection) {\r\n        // 添加選擇的回覆為 botMessage\r\n        setMessages((prevMessages) => [\r\n            ...prevMessages,\r\n            { type: \"bot\", text: selection },\r\n        ]);\r\n        // 隱藏選擇元件\r\n        setPendingChoices(null);\r\n    }\r\n\r\n    function scrollToBottom() {\r\n        // 滾動到消息列表底部\r\n        if (messagesEndRef.current) {\r\n            messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={pageSize ? classes.outerContainerDummy : classes.outerContainer}>\r\n                <ChatRoomHeader name={name} />\r\n                <div className={classes.listContainer}>\r\n                    {messages.map((message, index) =>\r\n                        message.type === \"user\" ? (\r\n                            <UserMessage key={index} content={message.text} />\r\n                        ) : (\r\n                            <BotMessage key={index} content={message.text} avatar={person.modelphoto} />\r\n                        )\r\n                    )}\r\n                    {pendingChoices && (\r\n                        <ChooseResponse\r\n                            res1={pendingChoices[0]}\r\n                            res2={pendingChoices[1]}\r\n                            onChoose={handleChoice}\r\n                            avatar={person.modelphoto}\r\n                        />\r\n                    )}\r\n                    <div ref={messagesEndRef}></div>\r\n                </div>\r\n                <MessageInput onSendMessage={sendMessageHandler} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MessageList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}