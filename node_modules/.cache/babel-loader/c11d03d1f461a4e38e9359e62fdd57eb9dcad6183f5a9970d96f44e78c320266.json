{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\gp-web-app\\\\frontend\\\\src\\\\components\\\\notepad\\\\EventCard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, redirect } from \"react-router-dom\";\nimport { getOneEvent } from \"../../utils/notepadUtils\";\nimport { refresh } from \"../../utils/tokenUtils\";\nimport classes from \"./EventCard.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventCard({\n  index,\n  id,\n  time,\n  title,\n  date,\n  photo\n}) {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const navigate = useNavigate();\n  const hoverClass = index % 3 === 1 ? classes.yellowHover : index % 3 === 2 ? classes.blueHover : classes.purpleHover;\n  function formatDate(isoString) {\n    const date = new Date(isoString); // 解析時間字串\n    const year = date.getFullYear(); // 獲取年份\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // 獲取月份，補0\n    const day = String(date.getDate()).padStart(2, \"0\"); // 獲取日期，補0\n\n    return `${year}.${month}.${day}`; // 格式化為 YYYY.MM.DD\n  }\n  const formattedDate = formatDate(date);\n  const handleRightClick = event => {\n    event.preventDefault(); // 阻止預設右鍵選單\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  async function cardClickHandler() {\n    try {\n      const response = await getOneEvent(id);\n      const accessToken = localStorage.getItem(\"accessToken\");\n      if (response.status === 200) {\n        const responseData = await response.json();\n        navigate(`/notepad/event/${time}/${id}`, {\n          state: {\n            event: responseData\n          }\n        });\n      } else if (response.status === 401 && accessToken) {\n        // access Token過期，用refresh Token去拿新的access Token\n        const checkReTokenStatus = await refresh();\n        if (checkReTokenStatus) {\n          const response = await getOneEvent(id);\n          if (response.status === 200) {\n            const responseData = await response.json();\n            navigate(`/notepad/event/${time}/${id}`, {\n              state: {\n                event: responseData\n              }\n            });\n          }\n        } else {\n          // refresh Token過期，重新登入並刪掉 localStorage 裡的東西\n          // alert(\"refresh Token過期，請重新登入!\");\n          localStorage.clear();\n          redirect(\"/login\");\n        }\n      }\n      // 發生其他問題\n      redirect(\"/login\");\n    } catch (error) {\n      console.error(\"Error durning get event: \", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.container} ${hoverClass}`,\n    onClick: cardClickHandler,\n    onContextMenu: handleRightClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: photo,\n      alt: \"\\u9810\\u8A2D\\u5E73\\u53F0\\u982D\\u50CF\",\n      className: classes.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.time,\n      children: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.modalBackdrop,\n      onClick: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.modal,\n        onClick: event => event.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u662F\\u5426\\u8981\\u522A\\u9664\\u6B64\\u6A21\\u578B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.modalButtons,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.cancelButton,\n            onClick: handleCloseModal,\n            children: \"\\u5426\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.confirmButton,\n            children: \"\\u662F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(EventCard, \"H3pwH0V+P1uj7t0XicueZPDvCkk=\", false, function () {\n  return [useNavigate];\n});\n_c = EventCard;\nexport default EventCard;\nvar _c;\n$RefreshReg$(_c, \"EventCard\");","map":{"version":3,"names":["useState","useEffect","useNavigate","redirect","getOneEvent","refresh","classes","jsxDEV","_jsxDEV","EventCard","index","id","time","title","date","photo","_s","showModal","setShowModal","navigate","hoverClass","yellowHover","blueHover","purpleHover","formatDate","isoString","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","formattedDate","handleRightClick","event","preventDefault","handleCloseModal","cardClickHandler","response","accessToken","localStorage","getItem","status","responseData","json","state","checkReTokenStatus","clear","error","console","className","container","onClick","onContextMenu","children","src","alt","image","fileName","_jsxFileName","lineNumber","columnNumber","modalBackdrop","modal","stopPropagation","modalButtons","cancelButton","confirmButton","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/gp-web-app/frontend/src/components/notepad/EventCard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate, redirect } from \"react-router-dom\";\r\nimport { getOneEvent } from \"../../utils/notepadUtils\";\r\nimport { refresh } from \"../../utils/tokenUtils\";\r\nimport classes from \"./EventCard.module.css\";\r\n\r\nfunction EventCard({ index, id, time, title, date, photo }) {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const hoverClass =\r\n        index % 3 === 1\r\n            ? classes.yellowHover\r\n            : index % 3 === 2\r\n            ? classes.blueHover\r\n            : classes.purpleHover;\r\n\r\n    function formatDate(isoString) {\r\n        const date = new Date(isoString); // 解析時間字串\r\n        const year = date.getFullYear(); // 獲取年份\r\n        const month = String(date.getMonth() + 1).padStart(2, \"0\"); // 獲取月份，補0\r\n        const day = String(date.getDate()).padStart(2, \"0\"); // 獲取日期，補0\r\n\r\n        return `${year}.${month}.${day}`; // 格式化為 YYYY.MM.DD\r\n    }\r\n\r\n    const formattedDate = formatDate(date);\r\n\r\n    const handleRightClick = (event) => {\r\n        event.preventDefault(); // 阻止預設右鍵選單\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n    async function cardClickHandler() {\r\n        try {\r\n            const response = await getOneEvent(id);\r\n            const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n            if (response.status === 200) {\r\n                const responseData = await response.json();\r\n                navigate(`/notepad/event/${time}/${id}`, {\r\n                    state: { event: responseData },\r\n                });\r\n            } else if (response.status === 401 && accessToken) {\r\n                // access Token過期，用refresh Token去拿新的access Token\r\n                const checkReTokenStatus = await refresh();\r\n\r\n                if (checkReTokenStatus) {\r\n                    const response = await getOneEvent(id);\r\n\r\n                    if (response.status === 200) {\r\n                        const responseData = await response.json();\r\n                        navigate(`/notepad/event/${time}/${id}`, {\r\n                            state: { event: responseData },\r\n                        });\r\n                    }\r\n                } else {\r\n                    // refresh Token過期，重新登入並刪掉 localStorage 裡的東西\r\n                    // alert(\"refresh Token過期，請重新登入!\");\r\n                    localStorage.clear();\r\n                    redirect(\"/login\");\r\n                }\r\n            }\r\n            // 發生其他問題\r\n            redirect(\"/login\");\r\n        } catch (error) {\r\n            console.error(\"Error durning get event: \", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={`${classes.container} ${hoverClass}`}\r\n            onClick={cardClickHandler}\r\n            onContextMenu={handleRightClick}\r\n        >\r\n            <img src={photo} alt=\"預設平台頭像\" className={classes.image} />\r\n            <div className={classes.title}>{title}</div>\r\n            <div className={classes.time}>{formattedDate}</div>\r\n            {showModal && (\r\n                <div className={classes.modalBackdrop} onClick={handleCloseModal}>\r\n                    <div className={classes.modal} onClick={(event) => event.stopPropagation()}>\r\n                        <p>是否要刪除此模型</p>\r\n                        <div className={classes.modalButtons}>\r\n                            <button\r\n                                className={classes.cancelButton}\r\n                                onClick={handleCloseModal}\r\n                            >\r\n                                否\r\n                            </button>\r\n                            <button\r\n                                className={classes.confirmButton}\r\n                                \r\n                            >\r\n                                是\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EventCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}