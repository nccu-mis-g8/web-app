{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\gp-web-app\\\\frontend\\\\src\\\\routes\\\\CreateEvent.js\";\nimport { redirect, useLoaderData } from \"react-router-dom\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport CreateNewEvent from \"../components/notepad/CreateNewEvent\";\nimport classes from \"./CreateEvent.module.css\";\nimport { refresh } from \"../utils/tokenUtils\";\nimport { getAllModel } from \"../utils/modelUtils\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateEvent() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.barContainer,\n        children: /*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateNewEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = CreateEvent;\nexport async function loader() {\n  const response = await getAllModel();\n  const accessToken = localStorage.getItem(\"accessToken\");\n  if (response.status === 200) {\n    const responseData = await response.json();\n    console.log(\"成功!!!!!\");\n    return responseData;\n  } else if (response.status === 401 && accessToken) {\n    // access Token過期，用refresh Token去拿新的access Token\n    const checkReTokenStatus = await refresh();\n    if (checkReTokenStatus) {\n      const response = await getAllModel();\n      if (response.status === 200) {\n        const responseData = await response.json();\n        return responseData;\n      }\n    } else {\n      // refresh Token過期，重新登入並刪掉 localStorage 裡的東西\n      // alert(\"refresh Token過期，請重新登入!\");\n      localStorage.clear();\n      return redirect(\"/login\");\n    }\n  }\n  // 發生其他問題\n  return redirect(\"/login\");\n}\nexport default CreateEvent;\nvar _c;\n$RefreshReg$(_c, \"CreateEvent\");","map":{"version":3,"names":["redirect","useLoaderData","NavigationBar","CreateNewEvent","classes","refresh","getAllModel","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateEvent","children","className","container","barContainer","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","accessToken","localStorage","getItem","status","responseData","json","console","log","checkReTokenStatus","clear","$RefreshReg$"],"sources":["C:/Users/user/Desktop/gp-web-app/frontend/src/routes/CreateEvent.js"],"sourcesContent":["import { redirect, useLoaderData } from \"react-router-dom\";\r\nimport NavigationBar from \"../components/NavigationBar\";\r\nimport CreateNewEvent from \"../components/notepad/CreateNewEvent\";\r\nimport classes from \"./CreateEvent.module.css\";\r\nimport { refresh } from \"../utils/tokenUtils\";\r\nimport { getAllModel } from \"../utils/modelUtils\";\r\n\r\nfunction CreateEvent() {\r\n    return (\r\n        \r\n        <>\r\n            <div className={classes.container}>\r\n                <div className={classes.barContainer}>\r\n                    <NavigationBar />\r\n                </div>\r\n                <CreateNewEvent />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport async function loader() {\r\n    const response = await getAllModel();\r\n    const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n    if (response.status === 200) {\r\n        const responseData = await response.json();\r\n        console.log(\"成功!!!!!\");\r\n        return responseData;\r\n    } else if (response.status === 401 && accessToken) {\r\n        // access Token過期，用refresh Token去拿新的access Token\r\n        const checkReTokenStatus = await refresh();\r\n\r\n        if (checkReTokenStatus) {\r\n            const response = await getAllModel();\r\n\r\n            if (response.status === 200) {\r\n                const responseData = await response.json();\r\n                return responseData;\r\n            }\r\n        } else {\r\n            // refresh Token過期，重新登入並刪掉 localStorage 裡的東西\r\n            // alert(\"refresh Token過期，請重新登入!\");\r\n            localStorage.clear();\r\n            return redirect(\"/login\");\r\n        }\r\n    }\r\n    // 發生其他問題\r\n    return redirect(\"/login\");\r\n}\r\n\r\nexport default CreateEvent;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,aAAa,QAAQ,kBAAkB;AAC1D,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,cAAc,MAAM,sCAAsC;AACjE,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,WAAWA,CAAA,EAAG;EACnB,oBAEIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACIJ,OAAA;MAAKK,SAAS,EAAET,OAAO,CAACU,SAAU;MAAAF,QAAA,gBAC9BJ,OAAA;QAAKK,SAAS,EAAET,OAAO,CAACW,YAAa;QAAAH,QAAA,eACjCJ,OAAA,CAACN,aAAa;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACNX,OAAA,CAACL,cAAc;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC,gBACR,CAAC;AAEX;AAACC,EAAA,GAZQT,WAAW;AAcpB,OAAO,eAAeU,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMhB,WAAW,CAAC,CAAC;EACpC,MAAMiB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EAEvD,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;IACzB,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,OAAOH,YAAY;EACvB,CAAC,MAAM,IAAIL,QAAQ,CAACI,MAAM,KAAK,GAAG,IAAIH,WAAW,EAAE;IAC/C;IACA,MAAMQ,kBAAkB,GAAG,MAAM1B,OAAO,CAAC,CAAC;IAE1C,IAAI0B,kBAAkB,EAAE;MACpB,MAAMT,QAAQ,GAAG,MAAMhB,WAAW,CAAC,CAAC;MAEpC,IAAIgB,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QACzB,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAC1C,OAAOD,YAAY;MACvB;IACJ,CAAC,MAAM;MACH;MACA;MACAH,YAAY,CAACQ,KAAK,CAAC,CAAC;MACpB,OAAOhC,QAAQ,CAAC,QAAQ,CAAC;IAC7B;EACJ;EACA;EACA,OAAOA,QAAQ,CAAC,QAAQ,CAAC;AAC7B;AAEA,eAAeW,WAAW;AAAC,IAAAS,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}