{"ast":null,"code":"export async function refresh() {\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n\n  // 先確認有沒有 refresh token\n  if (!refreshToken) {\n    return false;\n  }\n  ;\n  try {\n    const response = await fetch(\"https://nccu-group-8.work/auth/login/refresh\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        refreshToken: \"Bearer \" + refreshToken\n      })\n    });\n\n    // 若返回ok，更新所儲存的tokens\n    if (response.ok) {\n      const resData = await response.json();\n      localStorage.setItem(\"accessToken\", resData.access_token);\n      // localStorage.setItem(\"refreshToken\", resData.refresh_token);\n      return true; // refresh 成功\n    } else {\n      console.error(`Refresh failed with status: ${response.status}`);\n      return false; // refresh 失敗\n    }\n  } catch (error) {\n    console.error('Error during token refresh:', error);\n    return false; // 出現網路錯誤等問題\n  }\n}","map":{"version":3,"names":["refresh","refreshToken","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","ok","resData","json","setItem","access_token","console","error","status"],"sources":["C:/Users/user/Desktop/gp-web-app/frontend/src/utils/tokenUtils.js"],"sourcesContent":["export async function refresh() {\r\n    const refreshToken = localStorage.getItem(\"refreshToken\");\r\n\r\n    // 先確認有沒有 refresh token\r\n    if (!refreshToken) {\r\n        return false;\r\n    };\r\n\r\n    try {\r\n        const response = await fetch(\r\n            \"https://nccu-group-8.work/auth/login/refresh\",\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    refreshToken: \"Bearer \" + refreshToken,\r\n                }),\r\n            }\r\n        );\r\n\r\n        // 若返回ok，更新所儲存的tokens\r\n        if (response.ok) {\r\n            const resData = await response.json();\r\n            localStorage.setItem(\"accessToken\", resData.access_token);\r\n            // localStorage.setItem(\"refreshToken\", resData.refresh_token);\r\n            return true; // refresh 成功\r\n        } else {\r\n            console.error(`Refresh failed with status: ${response.status}`);\r\n            return false; // refresh 失敗\r\n        }\r\n\r\n    } catch(error) {\r\n        console.error('Error during token refresh:', error);\r\n        return false; // 出現網路錯誤等問題\r\n    }\r\n\r\n}"],"mappings":"AAAA,OAAO,eAAeA,OAAOA,CAAA,EAAG;EAC5B,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;;EAEzD;EACA,IAAI,CAACF,YAAY,EAAE;IACf,OAAO,KAAK;EAChB;EAAC;EAED,IAAI;IACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CACxB,8CAA8C,EAC9C;MACIC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBT,YAAY,EAAE,SAAS,GAAGA;MAC9B,CAAC;IACL,CACJ,CAAC;;IAED;IACA,IAAIG,QAAQ,CAACO,EAAE,EAAE;MACb,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACrCX,YAAY,CAACY,OAAO,CAAC,aAAa,EAAEF,OAAO,CAACG,YAAY,CAAC;MACzD;MACA,OAAO,IAAI,CAAC,CAAC;IACjB,CAAC,MAAM;MACHC,OAAO,CAACC,KAAK,CAAC,+BAA+Bb,QAAQ,CAACc,MAAM,EAAE,CAAC;MAC/D,OAAO,KAAK,CAAC,CAAC;IAClB;EAEJ,CAAC,CAAC,OAAMD,KAAK,EAAE;IACXD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,KAAK,CAAC,CAAC;EAClB;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}