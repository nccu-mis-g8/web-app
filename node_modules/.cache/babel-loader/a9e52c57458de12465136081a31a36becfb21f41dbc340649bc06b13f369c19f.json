{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\gp-web-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport ChatRoomHeader from \"./ChatRoomHeader\";\nimport UserMessage from \"./UserMessage\";\nimport BotMessage from \"./BotMessage\";\nimport ChooseResponse from \"./ChooseResponse\";\nimport MessageInput from \"./MessageInput\";\nimport classes from \"./MessageList.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MessageList({\n  dummy,\n  dummyName\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [pageSize, setPageSize] = useState(false);\n  const [botResponses] = useState([\"ÂèØ‰ª•ÂñîÔºÅÊàëÂñúÊ≠°Â•πÂÄëÁöÑÊ≠åÂíåËàûËπàÂæàÂèØÊÑõÂèàÂæàÊúâÊâçËèØ\", \"Â∞çÈòø ‰Ω†ÈÇÑÊúâÂñúÊ≠°‰ªÄÈ∫º K-pop ÂúòÈ´î üòç\", \"ÂñîÂñîÊòØÂ¶≥‰∏äÊ¨°Ë∑üÊàëÂàÜ‰∫´ÁöÑÂúòÈ´îÂóé\", [\"Â•ΩÂïäÂ•ΩÂïä  ÈÇ£ÊàëÂÄëÁ¥ÑÁîöÈ∫ºÊôÇÂÄôÂéªÁúãÂë¢ üòÜ\", \"Â•ΩËÄ∂ÔΩûÈÇ£ÊàëÂÄë‰ªÄÈ∫ºÊôÇÂÄôÂéªÁúãÊØîËºÉÂ•ΩÂë¢Ôºü\"]]);\n  const [responseIndex, setResponseIndex] = useState(0);\n  const [pendingChoices, setPendingChoices] = useState(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // Áï∂ÁµÑ‰ª∂È¶ñÊ¨°Âä†ËºâÊôÇËß∏ÁôºÊ∑°ÂÖ•ÊïàÊûú\n    setPageSize(dummy);\n  }, [dummy]);\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const {\n    person\n  } = location.state || {};\n  const name = person ? person.model_original_name : dummyName;\n  async function sendMessageHandler(userMessage) {\n    setMessages([...messages, {\n      type: \"user\",\n      text: userMessage\n    }]);\n    // setMessages((prevMessages) => [\n    //     ...prevMessages,\n    //     { type: \"bot\", text: \"Â∞öÊú™ÈÄ£Êé•API\" },\n    // ]);\n    const currentResponseIndex = responseIndex;\n    const nextResponse = botResponses[currentResponseIndex];\n    setResponseIndex(prevIndex => (prevIndex + 1) % botResponses.length);\n    setTimeout(() => {\n      if (Array.isArray(nextResponse)) {\n        // Â¶ÇÊûúÊòØÈÅ∏ÊìáÔºåÈ°ØÁ§∫ÈÅ∏Êìá\n        setPendingChoices(nextResponse);\n      } else {\n        // Â¶ÇÊûúÊòØÊôÆÈÄöÂõûË¶Ü\n        setMessages(prevMessages => [...prevMessages, {\n          type: \"bot\",\n          text: nextResponse\n        }]);\n      }\n    }, Math.random() * 2000 + 5000);\n  }\n  function handleChoice(selection) {\n    // Ê∑ªÂä†ÈÅ∏ÊìáÁöÑÂõûË¶ÜÁÇ∫ botMessage\n    setMessages(prevMessages => [...prevMessages, {\n      type: \"bot\",\n      text: selection\n    }]);\n    // Èö±ËóèÈÅ∏ÊìáÂÖÉ‰ª∂\n    setPendingChoices(null);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: pageSize ? classes.outerContainerDummy : classes.outerContainer,\n      children: [/*#__PURE__*/_jsxDEV(ChatRoomHeader, {\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.listContainer,\n        children: [messages.map((message, index) => message.type === \"user\" ? /*#__PURE__*/_jsxDEV(UserMessage, {\n          content: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(BotMessage, {\n          content: message.text,\n          avatar: person.modelphoto\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)), pendingChoices && /*#__PURE__*/_jsxDEV(ChooseResponse, {\n          res1: pendingChoices[0],\n          res2: pendingChoices[1],\n          onChoose: handleChoice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        onSendMessage: sendMessageHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(MessageList, \"Q7NVrLVH5WOIAE/+BGh0uglUDxk=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["useState","useEffect","useRef","useParams","useLocation","ChatRoomHeader","UserMessage","BotMessage","ChooseResponse","MessageInput","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageList","dummy","dummyName","_s","messages","setMessages","pageSize","setPageSize","botResponses","responseIndex","setResponseIndex","pendingChoices","setPendingChoices","messagesEndRef","id","location","person","state","name","model_original_name","sendMessageHandler","userMessage","type","text","currentResponseIndex","nextResponse","prevIndex","length","setTimeout","Array","isArray","prevMessages","Math","random","handleChoice","selection","children","className","outerContainerDummy","outerContainer","fileName","_jsxFileName","lineNumber","columnNumber","listContainer","map","message","index","content","avatar","modelphoto","res1","res2","onChoose","ref","onSendMessage","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/gp-web-app/frontend/src/components/chat/MessageList.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport ChatRoomHeader from \"./ChatRoomHeader\";\r\nimport UserMessage from \"./UserMessage\";\r\nimport BotMessage from \"./BotMessage\";\r\nimport ChooseResponse from \"./ChooseResponse\";\r\nimport MessageInput from \"./MessageInput\";\r\nimport classes from \"./MessageList.module.css\";\r\n\r\nfunction MessageList({ dummy, dummyName }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [pageSize, setPageSize] = useState(false);\r\n    const [botResponses] = useState([\r\n        \"ÂèØ‰ª•ÂñîÔºÅÊàëÂñúÊ≠°Â•πÂÄëÁöÑÊ≠åÂíåËàûËπàÂæàÂèØÊÑõÂèàÂæàÊúâÊâçËèØ\",\r\n        \"Â∞çÈòø ‰Ω†ÈÇÑÊúâÂñúÊ≠°‰ªÄÈ∫º K-pop ÂúòÈ´î üòç\",\r\n        \"ÂñîÂñîÊòØÂ¶≥‰∏äÊ¨°Ë∑üÊàëÂàÜ‰∫´ÁöÑÂúòÈ´îÂóé\",\r\n        [\"Â•ΩÂïäÂ•ΩÂïä  ÈÇ£ÊàëÂÄëÁ¥ÑÁîöÈ∫ºÊôÇÂÄôÂéªÁúãÂë¢ üòÜ\", \"Â•ΩËÄ∂ÔΩûÈÇ£ÊàëÂÄë‰ªÄÈ∫ºÊôÇÂÄôÂéªÁúãÊØîËºÉÂ•ΩÂë¢Ôºü\"]\r\n    ]);\r\n    const [responseIndex, setResponseIndex] = useState(0);\r\n    const [pendingChoices, setPendingChoices] = useState(null);\r\n    const messagesEndRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Áï∂ÁµÑ‰ª∂È¶ñÊ¨°Âä†ËºâÊôÇËß∏ÁôºÊ∑°ÂÖ•ÊïàÊûú\r\n        setPageSize(dummy);\r\n    }, [dummy]);\r\n\r\n    const { id } = useParams();\r\n    const location = useLocation();\r\n    const { person } = location.state || {};\r\n\r\n    const name = person ? person.model_original_name : dummyName;\r\n\r\n    async function sendMessageHandler(userMessage) {\r\n        setMessages([...messages, { type: \"user\", text: userMessage }]);\r\n        // setMessages((prevMessages) => [\r\n        //     ...prevMessages,\r\n        //     { type: \"bot\", text: \"Â∞öÊú™ÈÄ£Êé•API\" },\r\n        // ]);\r\n        const currentResponseIndex = responseIndex;\r\n        const nextResponse = botResponses[currentResponseIndex];\r\n        setResponseIndex((prevIndex) => (prevIndex + 1) % botResponses.length);\r\n\r\n        setTimeout(() => {\r\n            if (Array.isArray(nextResponse)) {\r\n                // Â¶ÇÊûúÊòØÈÅ∏ÊìáÔºåÈ°ØÁ§∫ÈÅ∏Êìá\r\n                setPendingChoices(nextResponse);\r\n            } else {\r\n                // Â¶ÇÊûúÊòØÊôÆÈÄöÂõûË¶Ü\r\n                setMessages((prevMessages) => [\r\n                    ...prevMessages,\r\n                    { type: \"bot\", text: nextResponse },\r\n                ]);\r\n            }\r\n        }, Math.random() * 2000 + 5000);\r\n    }\r\n\r\n    function handleChoice(selection) {\r\n        // Ê∑ªÂä†ÈÅ∏ÊìáÁöÑÂõûË¶ÜÁÇ∫ botMessage\r\n        setMessages((prevMessages) => [\r\n            ...prevMessages,\r\n            { type: \"bot\", text: selection },\r\n        ]);\r\n        // Èö±ËóèÈÅ∏ÊìáÂÖÉ‰ª∂\r\n        setPendingChoices(null);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={pageSize ? classes.outerContainerDummy : classes.outerContainer}>\r\n                <ChatRoomHeader name={name} />\r\n                <div className={classes.listContainer}>\r\n                    {messages.map((message, index) =>\r\n                        message.type === \"user\" ? (\r\n                            <UserMessage key={index} content={message.text} />\r\n                        ) : (\r\n                            <BotMessage key={index} content={message.text} avatar={person.modelphoto} />\r\n                        )\r\n                    )}\r\n                    {pendingChoices && (\r\n                        <ChooseResponse\r\n                            res1={pendingChoices[0]}\r\n                            res2={pendingChoices[1]}\r\n                            onChoose={handleChoice}\r\n                        />\r\n                    )}\r\n                    <div ref={messagesEndRef}></div>\r\n                </div>\r\n                <MessageInput onSendMessage={sendMessageHandler} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MessageList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}