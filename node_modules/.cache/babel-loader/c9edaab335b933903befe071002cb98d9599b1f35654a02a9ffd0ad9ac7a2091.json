{"ast":null,"code":"import{useState}from\"react\";import{Form,useNavigate}from\"react-router-dom\";import classes from\"./LoginMainFrame.module.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function LoginMainFrame(){const[account,setAccount]=useState(\"\");const[password,setPassword]=useState(\"\");const[errorMessage,setErrorMessage]=useState(\"\");const navigate=useNavigate();const isFormValid=account.trim()!==\"\"&&password.trim()!==\"\";// 確認ID跟密碼已經輸入了\nasync function loginHandler(e){e.preventDefault();// 阻止表單默認的提交行為\ntry{const response=await fetch(\"http://127.0.0.1:5001/auth/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({\"account\":account,\"password\":password})});if(response.status===200){const responseData=await response.json();// 儲存 Tokens 及必要資訊\nconsole.log(\"登入成功\");const accessToken=responseData.access_token;const refreshToken=responseData.refresh_token;const userId=responseData.user_id;localStorage.setItem(\"accessToken\",accessToken);localStorage.setItem(\"refreshToken\",refreshToken);localStorage.setItem(\"userId\",userId);navigate(\"/\");// 重新導向到主畫面\n}else if(response.status===401){const responseData=await response.json();const error=responseData.message;setErrorMessage(error);console.log(\"錯誤訊息\"+error);}else{const responseData=await response.json();const error=responseData.message;console.error(error);alert(\"發生錯誤，請重新整理後再試一次\");}}catch(error){console.error(\"Error durning login: \",error);}}return/*#__PURE__*/_jsxs(Form,{onSubmit:loginHandler,className:classes.formContainer,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.inputGroup,children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:classes.customPlaceholder,placeholder:\"\\u5E33\\u865F\",autoComplete:\"account\",onChange:e=>setAccount(e.target.value)})}),/*#__PURE__*/_jsx(\"div\",{className:classes.inputGroup,children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:classes.customPlaceholder,placeholder:\"\\u5BC6\\u78BC\",autoComplete:\"current-password\",onChange:e=>setPassword(e.target.value)})}),/*#__PURE__*/_jsx(\"button\",{className:classes.loginButton,disabled:!isFormValid,children:\"\\u767B\\u5165\"})]});}export default LoginMainFrame;","map":{"version":3,"names":["useState","Form","useNavigate","classes","jsx","_jsx","jsxs","_jsxs","LoginMainFrame","account","setAccount","password","setPassword","errorMessage","setErrorMessage","navigate","isFormValid","trim","loginHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","status","responseData","json","console","log","accessToken","access_token","refreshToken","refresh_token","userId","user_id","localStorage","setItem","error","message","alert","onSubmit","className","formContainer","children","inputGroup","type","customPlaceholder","placeholder","autoComplete","onChange","target","value","loginButton","disabled"],"sources":["C:/Users/user/Desktop/gp-web-app/frontend/src/components/login/LoginMainFrame.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Form, useNavigate } from \"react-router-dom\";\r\nimport classes from \"./LoginMainFrame.module.css\"\r\n\r\nfunction LoginMainFrame() {\r\n\r\n    const [account, setAccount] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const isFormValid =  account.trim() !== \"\" && password.trim() !== \"\"; // 確認ID跟密碼已經輸入了\r\n\r\n    async function loginHandler(e) {\r\n        e.preventDefault(); // 阻止表單默認的提交行為\r\n\r\n        try {\r\n            \r\n            const response = await fetch(\r\n                \"http://127.0.0.1:5001/auth/login\",\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"account\": account,\r\n                        \"password\": password\r\n                    }),\r\n                }\r\n            );\r\n\r\n            if(response.status === 200) {\r\n                const responseData = await response.json();\r\n        \r\n                // 儲存 Tokens 及必要資訊\r\n                console.log(\"登入成功\");\r\n                const accessToken = responseData.access_token;\r\n                const refreshToken = responseData.refresh_token;\r\n                const userId = responseData.user_id;\r\n                localStorage.setItem(\"accessToken\", accessToken);\r\n                localStorage.setItem(\"refreshToken\", refreshToken);\r\n                localStorage.setItem(\"userId\", userId);\r\n\r\n                navigate(\"/\"); // 重新導向到主畫面\r\n            } else if (response.status === 401) {\r\n                const responseData = await response.json();\r\n                const error = responseData.message;\r\n                setErrorMessage(error);\r\n                console.log(\"錯誤訊息\" + error);\r\n            } else {\r\n                const responseData = await response.json();\r\n                const error = responseData.message;\r\n                console.error(error);\r\n                alert(\"發生錯誤，請重新整理後再試一次\");\r\n            }\r\n\r\n        } catch(error) {\r\n            console.error(\"Error durning login: \", error);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Form onSubmit={loginHandler} className={classes.formContainer}>\r\n            <div className={classes.inputGroup}>\r\n                <input\r\n                    type=\"text\"\r\n                    className={classes.customPlaceholder}\r\n                    placeholder=\"帳號\"\r\n                    autoComplete=\"account\"\r\n                    onChange={(e) => setAccount(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className={classes.inputGroup}>\r\n                <input\r\n                    type=\"password\"\r\n                    className={classes.customPlaceholder}\r\n                    placeholder=\"密碼\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n            </div>\r\n            <button className={classes.loginButton} disabled={!isFormValid}>\r\n                登入\r\n            </button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default LoginMainFrame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}